<?xml version="1.0"?>
<project name="ClassGeneration" description="Creating PHP Classes dynamically" default="build" basedir=".">

    <property name="basedir" value="./"/>
    <property name="builddir" value="${basedir}/build"/>
    <property name="sourcedir" value="${basedir}/src"/>
    <property name="testdir" value="${basedir}/tests"/>

    <target name="build" depends="prepare,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit"/>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${builddir}/api"/>
        <delete dir="${builddir}/coverage"/>
        <delete dir="${builddir}/logs"/>
        <delete dir="${builddir}/pdepend"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${builddir}/api"/>
        <mkdir dir="${builddir}/coverage"/>
        <mkdir dir="${builddir}/logs"/>
        <mkdir dir="${builddir}/pdepend"/>
        <mkdir dir="${builddir}/phpdox"/>
    </target>

    <phplint>
        <fileset dir="${sourcedir}">
            <include name="**/*.php"/>
        </fileset>
        <fileset dir="${testdir}">
            <include name="**/*.php"/>
        </fileset>
    </phplint>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=PSR2"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpcs-ci"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${builddir}/logs/checkstyle.xml"/>
            <arg value="--standard=PSR2"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${sourcedir}"/>
            <arg value="text"/>
            <arg value="${builddir}/phpmd.xml"/>
        </exec>
    </target>

    <target name="phpmd-ci"
            description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${sourcedir}"/>
            <arg value="xml"/>
            <arg value="cleancode, codesize, controversial, design, naming, unusedcode"/>
            <arg value="--reportfile"/>
            <arg value="${builddir}/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--count-tests"/>
            <arg value="--log-csv"/>
            <arg value="${builddir}/logs/phploc.csv"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${builddir}/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd=${builddir}/logs/pmd-cpd.xml"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpdox" description="Generate API documentation using phpDox">
        <exec executable="phpdox"/>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit"/>
    </target>

</project>
